[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ddsurveys"
dynamic = ["version"]
requires-python = ">=3.12"
license = { file = "LICENSE" }
authors = [
  { name = "Lev Velykoivanenko", email = "lev.velykoivanenko@unil.ch" },
  { name = "Stefan Teofanovic", email = "stefan.teofanovic@heig-vd.ch" }
]
maintainers = [
  { name = "Lev Velykoivanenko", email = "lev.velykoivanenko@unil.ch" },
]
description = "A platform supporting the creation of data-driven surveys."
readme = { file = "README.md", content-type = "text/markdown" }
keywords = ["library", "analytics"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Environment :: GPU",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: Information Technology",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Database",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Operating System :: OS Independent"
]

dependencies = [
  "alembic>=1.13.3",
  "coloredlogs>=15.0.1",
  "fitbit>=0.3.1",
  "spotipy>=2.25.1",
  "flask>=3.0.3",
  "flask-cors>=5.0.0",
  "flask-jwt-extended>=4.6.0",
  "google-api-python-client>=2.149.0",
  "google-auth-httplib2>=0.2.0",
  "google-auth-oauthlib>=1.2.1",
  "gunicorn>=23.0.0",
  "lingua-language-detector>=2.0.2",
  "mysql-connector-python>=9.1.0",
  "pygithub>=2.4.0",
  "pymysql>=1.1.1",
  "python-dotenv>=1.0.1",
  "sonyflake-py>=1.3.0",
  "sqlalchemy>=2.0.35",
  "redis>=5.2.1",
  "surveymonkey-python>=0.1.6",
  "validators>=0.34.0",
  "werkzeug>=3.0.4",
  # Spacy dependencies
  "spacy>=3.8.2",
  # Japanese
  "SudachiPy>=0.6.8",
  # Ukrainian and Russian
  "pymorphy3>=2.0.2",
  # Thai
  "pythainlp>=5.0.4",
  # Ukrainian
  "pymorphy3-dicts-uk>=2.4.1.1.1663094765",
  # Vietnamese
  "Pyvi>=0.1.1",
  # Chinese
  "jieba>=0.42.1",
  "spacy-pkuseg>=1.0.0",
  # Spacy models, run scripts/update_spacy_models.py to update the model version urls
  "ca-core-news-sm",
  "zh-core-web-sm",
  "hr-core-news-sm",
  "da-core-news-sm",
  "nl-core-news-sm",
  "en-core-web-sm",
  "fi-core-news-sm",
  "fr-core-news-sm",
  "de-core-news-sm",
  "el-core-news-sm",
  "it-core-news-sm",
  "ja-core-news-sm",
  "ko-core-news-sm",
  "lt-core-news-sm",
  "mk-core-news-sm",
  "nb-core-news-sm",
  "pl-core-news-sm",
  "pt-core-news-sm",
  "ro-core-news-sm",
  "ru-core-news-sm",
  "sl-core-news-sm",
  "es-core-news-sm",
  "sv-core-news-sm",
  "uk-core-news-sm",
  "ruff>=0.11.2",
]

[project.urls]
Homepage = "https://github.com/DataDrivenSurveys/DataDrivenSurveys"
Source = "https://github.com/DataDrivenSurveys/DataDrivenSurveys"

[project.scripts]
ddsurveys-app = "ddsurveys.wsgi:app"

# TODO: check if a better build system can be used
#       Candidates: maturin
[tool.hatch.build.targets.wheel]
packages = ["ddsurveys"]

[tool.hatch.version]
path = "ddsurveys/__init__.py"

[tool.uv]
dev-dependencies = [
  # Project management
  #"uv>=0.4.21",
  # Linting and type checking
  "ruff>=0.11.2",
  "mypy>=1.12.0",
  "mypy-extensions>=1.0.0",
  # Coverage
  "coverage[toml]>=7.6.3 ",
  "codecov>=2.1.13",
  "codacy-coverage>=1.3.11",
  # Testing
  "pytest>=8.3.3",
  "pytest-cov>=5.0.0",
  "pytest-mock>=3.14.0",
  "pytest-flask>=1.3.0",
  # Documentation
  "docutils>=0.21.2",
  "sphinx>=8.1.3",
  "groundwork-sphinx-theme>=1.1.1",
  "semantic-version>=2.10.0",
  # Misc
  "tqdm>=4.66.5",
  "types-flask-cors>=5.0.0.20240902",
  "ipython>=8.29.0",
  "types-requests>=2.32.0.20241016",
  "types-oauthlib>=3.2.0.20240806",
  "types-python-dateutil>=2.9.0.20241206",
]

[tool.uv.sources]
ca-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/ca_core_news_sm-3.8.0/ca_core_news_sm-3.8.0-py3-none-any.whl" }
zh-core-web-sm = { url = "https://github.com/explosion/spacy-models/releases/download/zh_core_web_sm-3.8.0/zh_core_web_sm-3.8.0-py3-none-any.whl" }
hr-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/hr_core_news_sm-3.8.0/hr_core_news_sm-3.8.0-py3-none-any.whl" }
da-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/da_core_news_sm-3.8.0/da_core_news_sm-3.8.0-py3-none-any.whl" }
nl-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/nl_core_news_sm-3.8.0/nl_core_news_sm-3.8.0-py3-none-any.whl" }
en-core-web-sm = { url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.8.0/en_core_web_sm-3.8.0-py3-none-any.whl" }
fi-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/fi_core_news_sm-3.8.0/fi_core_news_sm-3.8.0-py3-none-any.whl" }
fr-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/fr_core_news_sm-3.8.0/fr_core_news_sm-3.8.0-py3-none-any.whl" }
de-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/de_core_news_sm-3.8.0/de_core_news_sm-3.8.0-py3-none-any.whl" }
el-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/el_core_news_sm-3.8.0/el_core_news_sm-3.8.0-py3-none-any.whl" }
it-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/it_core_news_sm-3.8.0/it_core_news_sm-3.8.0-py3-none-any.whl" }
ja-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/ja_core_news_sm-3.8.0/ja_core_news_sm-3.8.0-py3-none-any.whl" }
ko-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/ko_core_news_sm-3.8.0/ko_core_news_sm-3.8.0-py3-none-any.whl" }
lt-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/lt_core_news_sm-3.8.0/lt_core_news_sm-3.8.0-py3-none-any.whl" }
mk-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/mk_core_news_sm-3.8.0/mk_core_news_sm-3.8.0-py3-none-any.whl" }
nb-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/nb_core_news_sm-3.8.0/nb_core_news_sm-3.8.0-py3-none-any.whl" }
pl-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/pl_core_news_sm-3.8.0/pl_core_news_sm-3.8.0-py3-none-any.whl" }
pt-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/pt_core_news_sm-3.8.0/pt_core_news_sm-3.8.0-py3-none-any.whl" }
ro-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/ro_core_news_sm-3.8.0/ro_core_news_sm-3.8.0-py3-none-any.whl" }
ru-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/ru_core_news_sm-3.8.0/ru_core_news_sm-3.8.0-py3-none-any.whl" }
sl-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/sl_core_news_sm-3.8.0/sl_core_news_sm-3.8.0-py3-none-any.whl" }
es-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/es_core_news_sm-3.8.0/es_core_news_sm-3.8.0-py3-none-any.whl" }
sv-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/sv_core_news_sm-3.8.0/sv_core_news_sm-3.8.0-py3-none-any.whl" }
uk-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/uk_core_news_sm-3.8.0/uk_core_news_sm-3.8.0-py3-none-any.whl" }

[tool.pyright]
strict = ["ddsurveys"]
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
analyzeUnannotatedFunctions = true
strictParameterNoneValue = true
deprecateTypingAliases = true
enableExperimentalFeatures = true
disableBytesTypePromotions = true
strictGenericNarrowing = true

typeCheckingMode = "recommended"

[tool.ruff]
extend = "ruff.toml"

[tool.coverage.run]
branch = true

[tool.coverage.paths]
source = [
  "ddsurveys/",
]

[tool.coverage.report]
exclude_also = [
  # Don't complain about missing debug-only code:
  "def __repr__",
  "if self\\.debug",
  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:",
  # Don't complain about abstract methods, they aren't run:
  "@(abc\\.)?abstractmethod",
]
ignore_errors = true
skip_empty = true
show_missing = true

omit = [
  "tests/*"
]

[tool.mypy]
#disallow_any_decorated = false
#disallow_any_generics = false
#disallow_any_unimported = false
#disallow_subclassing_any = false
#disallow_untyped_calls = false
#disallow_untyped_defs = false
#ignore_missing_imports = true
#warn_return_any = false

check_untyped_defs = true
warn_return_any = true
warn_unused_configs = true

exclude = [
  "volumes",
  ".venv",
]
