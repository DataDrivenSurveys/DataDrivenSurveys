[metadata]
name = ddsurveys
version = attr: ddsurveys.__version__
author = Lev Velykoivanenko
author-email = lev.velykoivanenko@unil.ch
home-page = https://github.com/isplab-unil/DataDrivenSurveys
description = A platform supporting the creation of data-driven surveys.
long-description = file: README.md
license =
license-file =
license_files =
platform = any
keywords = library analytics
classifiers =
    Development Status :: 3 - Alpha
    Environment :: Console
    Environment :: GPU
    Intended Audience :: Developers
    Intended Audience :: End Users/Desktop
    Intended Audience :: Information Technology
    License :: OSI Approved :: MIT
    Programming Language :: Python :: 3
    Topic :: Database
    Topic :: Scientific/Engineering
    Topic :: Software Development :: Libraries :: Python Modules
    Operating System :: OS Independent

[options]
zip_safe = true
include_package_data = true
python_requires = >=3.11.0
packages = find:
test_suite = tests
install_requires =
    setuptools~=67.8.0
    requests~=2.30.0
    coloredlogs~=15.0.1
    verboselogs~=1.7
    sqlalchemy==2.0.20
    pymysql==1.1.0
    python-dotenv==1.0.0
    flask==2.3.3
    gunicorn==21.2.0
    mysql-connector-python==8.1.0
    werkzeug==3.0.0
    flask-jwt-extended==4.5.3
    flask-cors==4.0.0
    alembic==1.12.0
    rpdb==0.1.6
    fitbit==0.3.1
    sonyflake-py==1.3.0
    pytest==7.3.1
    pytest-mock==3.11.1
    pytest-flask==1.2.0
    surveymonkey-python==0.1.5
    validators==0.22.0
    PyGithub==2.1.1

tests_require =
    isp-utils[test]

[options.entry_points]
console_scripts =
     ddsurveys-app = ddsurveys.wsgi:app

[options.packages.find]
exclude =
    tests*
    tests.*

[options.extras_require]
# all features
all =
# test dependencies
test =
    pytest
# coverage dependencies
coverage =
    coverage
    codecov
    codacy-coverage
# documentation dependencies
doc =
    sphinx ~=3.0
    groundwork-sphinx-theme ~=1.1.1
    semantic-version ~=2.8
# development dependencies
dev =
    docutils
    Pygments
    %(test)s
    %(coverage)s

[bdist_wheel]

[coverage:run]
branch=True
source = isp_utils
concurrency =
    subprocess

[coverage:report]
exclude_lines =
    pragma: no cover
    raise AssertionError
    raise NotImplementedError
    return NotImplemented
    if 0:
    if __name__ == .__main__.:
    except ImportError
    @typing.overload
    @abc.abstractmethod
    if typing.TYPE_CHECKING:
ignore_errors = True
skip_empty = True
show_missing = False
omit =
    tests/*

[coverage:html]
directory = htmlcov
# Nosetests are run
extra_css = coverage_extra_css.css

[green]
file-pattern = test_*.py
verbose = 2
no-skip-report = true
quiet-stdout = true
run-coverage = true
processes = 1

[pydocstyle]
inherit = false
match-dir = (?!tests)(?!resources)(?!docs)[^\.].*
match = (?!test)(?!setup)[^\._].*\.py
ignore = D200, D203, D213, D406, D407

[flake8]
max-line-length = 120
doctests = True
ignore = D200, D203, D213, D406, D407
exclude =
    .git,
    .eggs,
    .idea,
    __pycache__,
    tests/,
    docs/,
    build/,
    dist/,
    setup.py

[mypy]
disallow_any_decorated = false
disallow_any_generics = false
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = false
disallow_untyped_defs = false
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = false

[nosetests]
verbosity = 3
with-doctest = 1
detailed-errors = 1

with-coverage = 1
cover-html = 1
cover-html-dir = ../htmlcov
cover-package = ddsurveys
cover-inclusive = 1

where = tests/
exe = 1
